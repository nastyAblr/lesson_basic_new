import sqlite3


conn = sqlite3.connect('my_database.db')
cursor = conn.cursor()


cursor.executescript("""
CREATE TABLE Сотрудники (
    сотрудник_id INTEGER PRIMARY KEY AUTOINCREMENT,
    имя TEXT,
    фамилия TEXT,
    возраст INTEGER,
    пол TEXT,
    UNIQUE (Имя, Фамилия, Возраст)
);

CREATE TABLE Клиенты (
    клиент_id INTEGER PRIMARY KEY AUTOINCREMENT,
    имя TEXT,
    фамилия TEXT,
    адрес TEXT,
    телефон TEXT,
    UNIQUE (Имя, Фамилия, Телефон)
);

CREATE TABLE Продукты (
    продукт_id INTEGER PRIMARY KEY AUTOINCREMENT,
    название TEXT,
    категория TEXT,
    стоимость REAL,
    количество INTEGER,
    UNIQUE (имя, категория, стоимость)
);

CREATE TABLE Заказы (
    заказ_id INTEGER PRIMARY KEY AUTOINCREMENT,
    клиент_id INTEGER,
    сотрудник_id INTEGER,
    дата TEXT,
    статус TEXT,
    FOREIGN KEY (клиент_id) REFERENCES Клиенты(клиент_id),
    FOREIGN KEY (сотрудник_id) REFERENCES Сотрудники(сотрудник_id)
);

CREATE TABLE Позиция_заказов (
    заказ_позиция_id INTEGER PRIMARY KEY AUTOINCREMENT,
    заказ_id INTEGER,
    продукт_id INTEGER,
    количество INTEGER,
    стоимость REAL,
    FOREIGN KEY (заказ_id) REFERENCES Заказы(заказ_id),
    FOREIGN KEY (продукт_id) REFERENCES Продукты(продукт_id)
);
""")


Сотрудники = [
    ('Иван', 'Иванов', 35, 'М'),
    ('Мария', 'Петрова', 28, 'Ж'),
    ('Андрей', 'Сидоров', 45, 'М'),
    ('Елена', 'Козлова', 31, 'Ж'),
    ('Дмитрий', 'Новиков', 40, 'М'),
    ('Ольга', 'Попова', 26, 'Ж'),
    ('Сергей', 'Волков', 38, 'М'),
    ('Анна', 'Смирнова', 33, 'Ж'),
    ('Николай', 'Федоров', 29, 'М'),
    ('Ирина', 'Морозова', 41, 'Ж')
]

Клиенты = [
    ('Алексей', 'Смирнов', 'ул. Ленина, 10', '5551234'),
    ('Анна', 'Кузнецова', 'пр. Мира, 15', '444555678'),
    ('Борис', 'Соловьев', 'ул. Победы, 8', '333222111'),
    ('Виктория', 'Орлова', 'ул. Мира, 20', '5559876'),
    ('Григорий', 'Васильев', 'ул. Московская, 50', '5550001'),
    ('Дарья', 'Алексева', 'ул. Чехова, 70', '222333444'),
    ('Евгений', 'Зайцев', 'ул. Пушкина, 33', '555111222'),
    ('Жанна', 'Кириллова', 'пр. Ленина, 11', '999888777'),
    ('Захар', 'Морозов', 'ул. Гагарина, 5', '444555666'),
    ('Ирина', 'Николаева', 'ул. Лесная, 1', '555444333')
]

Продукты = [
    ('Кофе Арабика', 'Напитки', 5.5, 100),
    ('Яблоки', 'Фрукты', 3.0, 200),
    ('Сахар', 'Продукты', 2.0, 150),
    ('Чай Зеленый', 'Напитки', 4.0, 80),
    ('Бананы', 'Фрукты', 2.5, 120),
    ('Кофе Растворимый', 'Напитки', 6.0, 90),
    ('Апельсины', 'Фрукты', 3.2, 110),
    ('Сыр', 'Молочные продукты', 8.0, 50),
    ('Сметана', 'Молочные продукты', 6.5, 60),
    ('Творог', 'Молочные продукты', 7.0, 70)
]

Заказы = [
    (1, 1, '2023-01-15', 'готово'),
    (2, 2, '2023-02-10', 'в процессе'),
    (3, 3, '2023-03-05', 'готово'),
    (1, 4, '2022-12-25', 'готово'),
    (5, 5, '2022-12-30', 'в процессе'),
    (6, 6, '2023-01-20', 'готово'),
    (7, 7, '2023-04-15', 'отменен'),
    (8, 8, '2023-05-10', 'готово'),
    (9, 9, '2023-06-01', 'в процессе'),
    (10, 10, '2023-07-22', 'готово')
]

Позиция_заказа = [
    (1, 1, 2, 5.5),
    (1, 2,5, 3.0),
    (2, 3, 10, 2.0),
    (3, 4, 3, 4.0),
    (4, 5, 7, 2.5),
    (5, 6, 4, 6.0),
    (6, 7, 8, 3.2),
    (7, 8, 1, 8.0),
    (8, 9, 2, 6.5),
    (9, 10, 5, 7.0)
]

cursor.executemany("INSERT OR IGNORE INTO Employees VALUES ( ?, ?, ?, ?);", Сотрудники)
cursor.executemany("INSERT OR IGNORE INTO Customers VALUES (?, ?, ?, ?);", Клиенты)
cursor.executemany("INSERT OR IGNORE INTO Products VALUES (?, ?, ?, ?);", Продукты)
cursor.executemany("INSERT OR IGNORE INTO Orders VALUES (?, ?, ?, ?);", Заказы)
cursor.executemany("INSERT OR IGNORE INTO OrderItems VALUES (?, ?, ?, ?);", Позиция_заказа)

conn.commit()



# 1. Сумма всех заказов для каждого клиента
cursor.execute("""
SELECT c.клиент_id, c.имя, c.фамилия, 
       SUM(oi.количество * oi.стоимость) AS total_order_sum
FROM Клиенты c
JOIN Заказы o ON c.клиент_id = o.клиент_id
JOIN Позиция_заказов oi ON o.заказ_id = oi.заказ_id
GROUP BY c.клиент_id
""")
print("Сумма всех заказов для каждого клиента:")
for row in cursor.fetchall():
    print(row)

# 2. Средний возраст сотрудников
cursor.execute("SELECT AVG(возраст) FROM Сотрудники")
print("\nСредний возраст сотрудников:", cursor.fetchone()[0])

# 3. Общая стоимость всех продуктов на складе
cur.execute("SELECT SUM(стоимость * количество) FROM Продукты")
print("\nОбщая стоимость всех продуктов на складе:", cursor.fetchone()[0])

# 4. Клиент с самым большим количеством заказов
cursor.execute("""
SELECT c.клиент_id, c.имя, c.фамилия, COUNT(o.заказ_id) AS orders_count
FROM Клиенты c
JOIN Orders o ON c.клиент_id = o.клиент_id
GROUP BY c.клиент_id
ORDER BY orders_count DESC
LIMIT 1
""")
print("\nКлиент с самым большим количеством заказов:", cursor.fetchone())

# 5. Доля мужчин и женщин среди сотрудников
cursor.execute("""
SELECT пол, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Сотрудники) AS percentage
FROM Сотрудники
GROUP BY пол
""")
print("\nДоля мужчин и женщин среди сотрудников:")
for row in cursor.fetchall():
    print(row)

# Другие запросы можно сделать аналогично, если нужно.

# Закрываем соединение
conn.close()


